// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("client") // Role can be "client" or "admin"
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
}

// Model baru untuk menyimpan data mobil
model Car {
  id           String         @id @default(cuid())
  make         String // Merek mobil (ex: Toyota)
  model        String // Model mobil (ex: Avanza)
  licensePlate String         @unique // Plat nomor unik
  isAvailable  Boolean        @default(true) // Status ketersediaan
  dailyPrice   Float // Harga per hari
  weeklyPrice  Float // Harga per minggu
  monthlyPrice Float // Harga per bulan
  orders       Order[]
}

// Model untuk menyimpan data pesanan
model Order {
  id          String      @id @default(cuid())
  userId      String
  carId       String
  orderStatus String      @default("pending") // Status pesanan: "pending", "accepted", "rejected", "paid"
  startDate   DateTime
  endDate     DateTime
  totalPrice  Float
  paymentToken String? // Token dari Midtrans
  paymentStatus String? @default("pending") // Status pembayaran: "pending", "settlement", "expire"

  user        User        @relation(fields: [userId], references: [id])
  car         Car         @relation(fields: [carId], references: [id])
}